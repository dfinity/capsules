stages:
  - build
  - upload
  - release

rust-latest:
  stage: build
  image: rust:latest
  script:
    - cargo build --verbose
    - cargo test --verbose

rust-nightly:
  stage: build
  image: rustlang/rust:nightly
  script:
    - cargo build --verbose
    - cargo test --verbose
  allow_failure: true


build-release:
  stage: build
  image: rust:latest
  script:
    - cargo build --package capsule --release
  artifacts:
    paths:
      - ./target/release/capsule

upload-release:
  before_script: []
  dependencies:
    - build-release
  needs:
    - build-release
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script: |
    set -x
    export PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/capsule/${CI_COMMIT_TAG}"
    curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./target/release/capsule "${PACKAGE_REGISTRY_URL}/capsule"

make-release:
  before_script: []
  dependencies:
    - build-release
  needs:
    - build-release
    - upload-release
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script: |
    set -x
    export PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/capsule/${CI_COMMIT_TAG}"
    export CAPSULES_BINARY=capsule
    release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG
        --assets-link "{\"name\":\"capsule\",\"url\":\"${PACKAGE_REGISTRY_URL}/capsule\"}"
